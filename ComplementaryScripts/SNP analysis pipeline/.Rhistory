}
cds_seq <- unlist(tt0)
gene_snp[['gene']] <- unlist(strsplit(ss$cds_seq[1], split = ""))
# cds_location
gene_snp[['gene_coordinate']] <- cds_seq
gene_snp[['protein']] <- unlist(strsplit(ss$aa_seq[1], split = ""))
gene_snp[['protein_coordinate']] <- seq(as.numeric(ss$aa_length[1]))
} else{
ss <- filter(genesum, locus_tag==gene_name)
ll <- ss$cds_location
ll1 <- unlist(str_split(ll, ","))
ll1 <- str_replace_all(ll1, "location=complement\\(join\\(","") %>%
str_replace_all(.,"\\)","") %>%
str_replace_all(.,"location=complement\\(", "")
tt <- list()
for (i in seq(length(ll1))){
tt[[i]] <- unlist(str_split(ll1[i],"\\.\\."))
}
tt0 <- list()
for (i in seq(length(tt),1,-1)){
print(i)
tt0[[i]] <- seq(as.numeric(tt[[i]][2]), as.numeric(tt[[i]][1]),-1)
cds_seq <- c(cds_seq, unlist(tt0[[i]]))
}
gene_snp[['gene']] <- unlist(strsplit(ss$cds_seq[1], split = ""))
# cds_location
gene_snp[['gene_coordinate']] <- cds_seq
gene_snp[['protein']] <- unlist(strsplit(ss$aa_seq[1], split = ""))
gene_snp[['protein_coordinate']] <- seq(as.numeric(ss$aa_length[1]))
}
return(gene_snp)
}
getGeneCoordinate(gene_name = "YAL062W")
getGeneCoordinate(gene_name = "YAL054C")
getGeneCoordinate(gene_name = "YCL005W-A")
getGeneCoordinate(gene_name = "YER003C")
for (i in seq(length(gene_feature_GEM$locus_tag))) {
getGeneCoordinate(gene_name = gene_feature_GEM$locus_tag[i])
}
gene_feature_GEM$locus_tag[1]
getGeneCoordinate(gene_name = gene_feature_GEM$locus_tag[1])
for (i in seq(length(gene_feature_GEM$locus_tag))) {
getGeneCoordinate(gene_feature_GEM$locus_tag[i])
}
for (i in 1:10) {
getGeneCoordinate(gene_feature_GEM$locus_tag[i])
}
for (i in 1:20) {
getGeneCoordinate(gene_feature_GEM$locus_tag[i])
}
for (i in 1:100) {
getGeneCoordinate(gene_feature_GEM$locus_tag[i])
}
for (i in 1:1226) {
getGeneCoordinate(gene_feature_GEM$locus_tag[i])
}
for (i in 1:600) {
getGeneCoordinate(gene_feature_GEM$locus_tag[i])
}
for (i in 1:300) {
getGeneCoordinate(gene_feature_GEM$locus_tag[i])
}
for (i in 300:600) {
getGeneCoordinate(gene_feature_GEM$locus_tag[i])
}
for (i in 400:600) {
getGeneCoordinate(gene_feature_GEM$locus_tag[i])
}
for (i in 500:600) {
getGeneCoordinate(gene_feature_GEM$locus_tag[i])
}
for (i in 550:600) {
getGeneCoordinate(gene_feature_GEM$locus_tag[i])
}
for (i in 560:600) {
getGeneCoordinate(gene_feature_GEM$locus_tag[i])
}
for (i in 570:600) {
getGeneCoordinate(gene_feature_GEM$locus_tag[i])
}
for (i in 580:600) {
getGeneCoordinate(gene_feature_GEM$locus_tag[i])
}
for (i in 570:580) {
getGeneCoordinate(gene_feature_GEM$locus_tag[i])
}
getGeneCoordinate(gene_feature_GEM$locus_tag[571])
getGeneCoordinate(gene_feature_GEM$locus_tag[572])
getGeneCoordinate(gene_feature_GEM$locus_tag[573])
getGeneCoordinate(gene_feature_GEM$locus_tag[574])
getGeneCoordinate(gene_feature_GEM$locus_tag[575])
getGeneCoordinate(gene_feature_GEM$locus_tag[576])
getGeneCoordinate(gene_feature_GEM$locus_tag[577])
getGeneCoordinate(gene_feature_GEM$locus_tag[578])
getGeneCoordinate(gene_feature_GEM$locus_tag[579])
getGeneCoordinate(gene_feature_GEM$locus_tag[580])
getGeneCoordinate(gene_feature_GEM$locus_tag[579])
gene_feature_GEM$locus_tag[579]
genesum = gene_feature_GEM
gene_name <- "YIL111W"
gene_snp <- list()
cds_seq <- vector()
gene_name <- "YIL111W" # example
ss <- filter(genesum, locus_tag==gene_name)
ss
ll <- ss$cds_location
ll
ll1 <- unlist(str_split(ll, ","))
ll1
ll1 <- str_replace_all(ll1, "location=join\\(","") %>%
str_replace_all(.,"\\)","") %>%
str_replace_all(.,"location=", "")
ll1
for (i in seq(length(ll1))){
if(str_detect(ll1[i],"\\.\\." )){
tt[[i]] <- unlist(str_split(ll1[i],"\\.\\."))
} else{
tt[[i]] <- ll1[i]
}
}
tt
ll1
tt <- list()
for (i in seq(length(ll1))){
if(str_detect(ll1[i],"\\.\\." )){
tt[[i]] <- unlist(str_split(ll1[i],"\\.\\."))
} else{
tt[[i]] <- ll1[i]
}
}
tt0 <- list()
for (i in seq(length(tt))){
if(length(tt[[i]])==2) {
tt0[[i]] <- seq(as.numeric(tt[[i]][1]), as.numeric(tt[[i]][2]),1)
} else{
tt0[[i]] <-tt[[i]][1]
}
}
cds_seq <- unlist(tt0)
cds_seq
getGeneCoordinate <- function(gene_name, genesum = gene_feature_GEM ){
#gene_name <- "YIL111W" # example
ss <- filter(genesum, locus_tag==gene_name)
gene_snp <- list()
cds_seq <- vector()
if(str_detect(ss$location[1], "complement")==FALSE){
ll <- ss$cds_location
ll1 <- unlist(str_split(ll, ","))
ll1 <- str_replace_all(ll1, "location=join\\(","") %>%
str_replace_all(.,"\\)","") %>%
str_replace_all(.,"location=", "")
tt <- list()
for (i in seq(length(ll1))){
if(str_detect(ll1[i],"\\.\\." )){
tt[[i]] <- unlist(str_split(ll1[i],"\\.\\."))
} else{
tt[[i]] <- ll1[i]
}
}
tt0 <- list()
for (i in seq(length(tt))){
if(length(tt[[i]])==2) {
tt0[[i]] <- seq(as.numeric(tt[[i]][1]), as.numeric(tt[[i]][2]),1)
} else{
tt0[[i]] <-tt[[i]][1]
}
}
cds_seq <- unlist(tt0)
gene_snp[['gene']] <- unlist(strsplit(ss$cds_seq[1], split = ""))
# cds_location
gene_snp[['gene_coordinate']] <- cds_seq
gene_snp[['protein']] <- unlist(strsplit(ss$aa_seq[1], split = ""))
gene_snp[['protein_coordinate']] <- seq(as.numeric(ss$aa_length[1]))
} else{
ss <- filter(genesum, locus_tag==gene_name)
ll <- ss$cds_location
ll1 <- unlist(str_split(ll, ","))
ll1 <- str_replace_all(ll1, "location=complement\\(join\\(","") %>%
str_replace_all(.,"\\)","") %>%
str_replace_all(.,"location=complement\\(", "")
tt <- list()
for (i in seq(length(ll1))){
if(str_detect(ll1[i],"\\.\\." )){
tt[[i]] <- unlist(str_split(ll1[i],"\\.\\."))
} else{
tt[[i]] <- ll1[i]
}
}
tt0 <- list()
for (i in seq(length(tt),1,-1)){
if(length(tt[[i]]==2)){
tt0[[i]] <- seq(as.numeric(tt[[i]][2]), as.numeric(tt[[i]][1]),-1)
cds_seq <- c(cds_seq, unlist(tt0[[i]]))
} else{
tt0[[i]] <- as.numeric(tt[[i]][1])
cds_seq <- c(cds_seq, unlist(tt0[[i]]))
}
}
gene_snp[['gene']] <- unlist(strsplit(ss$cds_seq[1], split = ""))
# cds_location
gene_snp[['gene_coordinate']] <- cds_seq
gene_snp[['protein']] <- unlist(strsplit(ss$aa_seq[1], split = ""))
gene_snp[['protein_coordinate']] <- seq(as.numeric(ss$aa_length[1]))
}
return(gene_snp)
}
getGeneCoordinate(gene_name = "YER003C")
getGeneCoordinate(gene_feature_GEM$locus_tag[579])
gene_feature_GEM[579,]
gene_feature_GEM$locus_tag[579]
gene_name <- "YIL111W"
genesum = gene_feature_GEM
genesum = gene_feature_GEM
ss <- filter(genesum, locus_tag==gene_name)
gene_snp <- list()
cds_seq <- vector()
str_detect(ss$location[1], "complement")
getGeneCoordinate <- function(gene_name, genesum = gene_feature_GEM ){
#gene_name <- "YIL111W" # example
ss <- filter(genesum, locus_tag==gene_name)
gene_snp <- list()
cds_seq <- vector()
if(str_detect(ss$location[1], "complement")==FALSE){
ll <- ss$cds_location
ll1 <- unlist(str_split(ll, ","))
ll1 <- str_replace_all(ll1, "location=join\\(","") %>%
str_replace_all(.,"\\)","") %>%
str_replace_all(.,"location=", "")
tt <- list()
for (i in seq(length(ll1))){
if(str_detect(ll1[i],"\\.\\." )){
tt[[i]] <- unlist(str_split(ll1[i],"\\.\\."))
} else{
tt[[i]] <- ll1[i]
}
}
tt0 <- list()
for (i in seq(length(tt))){
if(length(tt[[i]])==2) {
tt0[[i]] <- seq(as.numeric(tt[[i]][1]), as.numeric(tt[[i]][2]),1)
} else{
tt0[[i]] <-tt[[i]][1]
}
}
cds_seq <- unlist(tt0)
gene_snp[['gene']] <- unlist(strsplit(ss$cds_seq[1], split = ""))
# cds_location
gene_snp[['gene_coordinate']] <- cds_seq
gene_snp[['protein']] <- unlist(strsplit(ss$aa_seq[1], split = ""))
gene_snp[['protein_coordinate']] <- seq(as.numeric(ss$aa_length[1]))
} else{
ss <- filter(genesum, locus_tag==gene_name)
ll <- ss$cds_location
ll1 <- unlist(str_split(ll, ","))
ll1 <- str_replace_all(ll1, "location=complement\\(join\\(","") %>%
str_replace_all(.,"\\)","") %>%
str_replace_all(.,"location=complement\\(", "")
tt <- list()
for (i in seq(length(ll1))){
if(str_detect(ll1[i],"\\.\\." )){
tt[[i]] <- unlist(str_split(ll1[i],"\\.\\."))
} else{
tt[[i]] <- ll1[i]
}
}
tt0 <- list()
for (i in seq(length(tt),1,-1)){
if(length(tt[[i]]==2)){
tt0[[i]] <- seq(as.numeric(tt[[i]][2]), as.numeric(tt[[i]][1]),-1)
cds_seq <- c(cds_seq, unlist(tt0[[i]]))
} else{
tt0[[i]] <- as.numeric(tt[[i]][1])
cds_seq <- c(cds_seq, unlist(tt0[[i]]))
}
}
gene_snp[['gene']] <- unlist(strsplit(ss$cds_seq[1], split = ""))
# cds_location
gene_snp[['gene_coordinate']] <- cds_seq
gene_snp[['protein']] <- unlist(strsplit(ss$aa_seq[1], split = ""))
gene_snp[['protein_coordinate']] <- seq(as.numeric(ss$aa_length[1]))
}
return(gene_snp)
}
getGeneCoordinate(gene_name = "YER003C")
for (i in 570:580) {
getGeneCoordinate(gene_feature_GEM$locus_tag[i])
}
getGeneCoordinate(gene_feature_GEM$locus_tag[579])
for (i in 570:580) {
getGeneCoordinate(gene_feature_GEM$locus_tag[i])
}
getGeneCoordinate(gene_feature_GEM$locus_tag[571])
getGeneCoordinate(gene_feature_GEM$locus_tag[572])
getGeneCoordinate(gene_feature_GEM$locus_tag[573])
getGeneCoordinate(gene_feature_GEM$locus_tag[574])
getGeneCoordinate(gene_feature_GEM$locus_tag[575])
getGeneCoordinate(gene_feature_GEM$locus_tag[576])
getGeneCoordinate(gene_feature_GEM$locus_tag[577])
getGeneCoordinate(gene_feature_GEM$locus_tag[578])
getGeneCoordinate(gene_feature_GEM$locus_tag[579])
getGeneCoordinate(gene_feature_GEM$locus_tag[580])
for (i in 570:580) {
getGeneCoordinate(gene_feature_GEM$locus_tag[i])
}
for (i in 1:10) {
getGeneCoordinate(gene_feature_GEM$locus_tag[i])
}
getGeneCoordinate(gene_name = "YER003C")
getGeneCoordinate <- function(gene_name, genesum = gene_feature_GEM ){
#gene_name <- "YIL111W" # example
ss <- filter(genesum, locus_tag==gene_name)
gene_snp <- list()
cds_seq <- vector()
if(str_detect(ss$location[1], "complement")==FALSE){
ll <- ss$cds_location
ll1 <- unlist(str_split(ll, ","))
ll1 <- str_replace_all(ll1, "location=join\\(","") %>%
str_replace_all(.,"\\)","") %>%
str_replace_all(.,"location=", "")
tt <- list()
for (i in seq(length(ll1))){
if(str_detect(ll1[i],"\\.\\." )){
tt[[i]] <- unlist(str_split(ll1[i],"\\.\\."))
} else{
tt[[i]] <- ll1[i]
}
}
tt0 <- list()
for (i in seq(length(tt))){
if(length(tt[[i]])==2) {
tt0[[i]] <- seq(as.numeric(tt[[i]][1]), as.numeric(tt[[i]][2]),1)
} else{
tt0[[i]] <-tt[[i]][1]
}
}
cds_seq <- unlist(tt0)
gene_snp[['gene']] <- unlist(strsplit(ss$cds_seq[1], split = ""))
# cds_location
gene_snp[['gene_coordinate']] <- cds_seq
gene_snp[['protein']] <- unlist(strsplit(ss$aa_seq[1], split = ""))
gene_snp[['protein_coordinate']] <- seq(as.numeric(ss$aa_length[1]))
} else{
ss <- filter(genesum, locus_tag==gene_name)
ll <- ss$cds_location
ll1 <- unlist(str_split(ll, ","))
ll1 <- str_replace_all(ll1, "location=complement\\(join\\(","") %>%
str_replace_all(.,"\\)","") %>%
str_replace_all(.,"location=complement\\(", "")
tt <- list()
for (i in seq(length(ll1))){
if(str_detect(ll1[i],"\\.\\." )){
tt[[i]] <- unlist(str_split(ll1[i],"\\.\\."))
} else{
tt[[i]] <- ll1[i]
}
}
tt0 <- list()
for (i in seq(length(tt),1,-1)){
if(length(tt[[i]]==2)){
tt0[[i]] <- seq(as.numeric(tt[[i]][2]), as.numeric(tt[[i]][1]),-1)
cds_seq <- c(cds_seq, unlist(tt0[[i]]))
} else{
tt0[[i]] <- as.numeric(tt[[i]][1])
cds_seq <- c(cds_seq, unlist(tt0[[i]]))
}
}
gene_snp[['gene']] <- unlist(strsplit(ss$cds_seq[1], split = ""))
# cds_location
gene_snp[['gene_coordinate']] <- cds_seq
gene_snp[['protein']] <- unlist(strsplit(ss$aa_seq[1], split = ""))
gene_snp[['protein_coordinate']] <- seq(as.numeric(ss$aa_length[1]))
}
return(gene_snp)
}
for (i in 1:10) {
getGeneCoordinate(gene_feature_GEM$locus_tag[i])
}
for (i in 1:100) {
getGeneCoordinate(gene_feature_GEM$locus_tag[i])
}
for (i in 1:100) {
print(gene_feature_GEM$locus_tag[i])
getGeneCoordinate(gene_feature_GEM$locus_tag[i])
}
for (i in 1:1000) {
print(gene_feature_GEM$locus_tag[i])
getGeneCoordinate(gene_feature_GEM$locus_tag[i])
}
for (i in 1:500) {
print(gene_feature_GEM$locus_tag[i])
getGeneCoordinate(gene_feature_GEM$locus_tag[i])
}
for (i in 500:600) {
print(gene_feature_GEM$locus_tag[i])
getGeneCoordinate(gene_feature_GEM$locus_tag[i])
}
for (i in 580:600) {
print(gene_feature_GEM$locus_tag[i])
getGeneCoordinate(gene_feature_GEM$locus_tag[i])
}
for (i in 500:580) {
print(gene_feature_GEM$locus_tag[i])
getGeneCoordinate(gene_feature_GEM$locus_tag[i])
}
for (i in 540:580) {
print(gene_feature_GEM$locus_tag[i])
getGeneCoordinate(gene_feature_GEM$locus_tag[i])
}
for (i in 560:580) {
print(gene_feature_GEM$locus_tag[i])
getGeneCoordinate(gene_feature_GEM$locus_tag[i])
}
for (i in 570:580) {
print(gene_feature_GEM$locus_tag[i])
getGeneCoordinate(gene_feature_GEM$locus_tag[i])
}
getGeneCoordinate(gene_feature_GEM$locus_tag[570])
for (i in 571:580) {
print(gene_feature_GEM$locus_tag[i])
getGeneCoordinate(gene_feature_GEM$locus_tag[570])
}
for (i in 571:580) {
print(gene_feature_GEM$locus_tag[i])
getGeneCoordinate(gene_feature_GEM$locus_tag[i])
}
for (i in 580:1000) {
print(gene_feature_GEM$locus_tag[i])
getGeneCoordinate(gene_feature_GEM$locus_tag[i])
}
getGeneCoordinate(gene_feature_GEM$locus_tag[571])
getGeneCoordinate(gene_feature_GEM$locus_tag[570])
gene_feature_GEM$locus_tag[570]
gene_feature_GEM[570,]
gene_feature_GEM$aa_length[570]<- 338 # every protein should have parameter of aa_length
getGeneCoordinate <- function(gene_name, genesum = gene_feature_GEM ){
#gene_name <- "YIL111W" # example
ss <- filter(genesum, locus_tag==gene_name)
gene_snp <- list()
cds_seq <- vector()
if(str_detect(ss$location[1], "complement")==FALSE){
ll <- ss$cds_location
ll1 <- unlist(str_split(ll, ","))
ll1 <- str_replace_all(ll1, "location=join\\(","") %>%
str_replace_all(.,"\\)","") %>%
str_replace_all(.,"location=", "")
tt <- list()
for (i in seq(length(ll1))){
if(str_detect(ll1[i],"\\.\\." )){
tt[[i]] <- unlist(str_split(ll1[i],"\\.\\."))
} else{
tt[[i]] <- ll1[i]
}
}
tt0 <- list()
for (i in seq(length(tt))){
if(length(tt[[i]])==2) {
tt0[[i]] <- seq(as.numeric(tt[[i]][1]), as.numeric(tt[[i]][2]),1)
} else{
tt0[[i]] <-tt[[i]][1]
}
}
cds_seq <- unlist(tt0)
gene_snp[['gene']] <- unlist(strsplit(ss$cds_seq[1], split = ""))
# cds_location
gene_snp[['gene_coordinate']] <- cds_seq
gene_snp[['protein']] <- unlist(strsplit(ss$aa_seq[1], split = ""))
gene_snp[['protein_coordinate']] <- seq(as.numeric(ss$aa_length[1]))
} else{
ss <- filter(genesum, locus_tag==gene_name)
ll <- ss$cds_location
ll1 <- unlist(str_split(ll, ","))
ll1 <- str_replace_all(ll1, "location=complement\\(join\\(","") %>%
str_replace_all(.,"\\)","") %>%
str_replace_all(.,"location=complement\\(", "")
tt <- list()
for (i in seq(length(ll1))){
if(str_detect(ll1[i],"\\.\\." )){
tt[[i]] <- unlist(str_split(ll1[i],"\\.\\."))
} else{
tt[[i]] <- ll1[i]
}
}
tt0 <- list()
for (i in seq(length(tt),1,-1)){
if(length(tt[[i]]==2)){
tt0[[i]] <- seq(as.numeric(tt[[i]][2]), as.numeric(tt[[i]][1]),-1)
cds_seq <- c(cds_seq, unlist(tt0[[i]]))
} else{
tt0[[i]] <- as.numeric(tt[[i]][1])
cds_seq <- c(cds_seq, unlist(tt0[[i]]))
}
}
gene_snp[['gene']] <- unlist(strsplit(ss$cds_seq[1], split = ""))
# cds_location
gene_snp[['gene_coordinate']] <- cds_seq
gene_snp[['protein']] <- unlist(strsplit(ss$aa_seq[1], split = ""))
gene_snp[['protein_coordinate']] <- seq(as.numeric(ss$aa_length[1]))
}
return(gene_snp)
}
for (i in 1:1226) {
print(gene_feature_GEM$locus_tag[i])
getGeneCoordinate(gene_feature_GEM$locus_tag[570])
}
for (i in 1:1226) {
print(gene_feature_GEM$locus_tag[i])
print(getGeneCoordinate(gene_feature_GEM$locus_tag[i]))
}
for (i in 1:1226) {
print(gene_feature_GEM$locus_tag[i])
print(getGeneCoordinate(gene_feature_GEM$locus_tag[i]))
}
